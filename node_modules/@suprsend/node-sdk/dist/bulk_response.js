"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var BulkResponse = /*#__PURE__*/function () {
  function BulkResponse() {
    (0, _classCallCheck2["default"])(this, BulkResponse);
    this.status;
    this.failed_records = [];
    this.total = 0;
    this.success = 0;
    this.failure = 0;
    this.warnings = [];
  }
  (0, _createClass2["default"])(BulkResponse, [{
    key: "merge_chunk_response",
    value: function merge_chunk_response(ch_resp) {
      if (!ch_resp) {
        return;
      }
      // possible status: success/partial/fail
      if (!this.status) {
        this.status = ch_resp["status"];
      } else {
        if (this.status === "success") {
          if (ch_resp.status === "fail") {
            this.status = "partial";
          }
        } else if (this.status === "fail") {
          if (ch_resp.status === "success") {
            this.status = "partial";
          }
        }
      }
      this.total += ch_resp.total || 0;
      this.success += ch_resp.success || 0;
      this.failure += ch_resp.failure || 0;
      var failed_recs = ch_resp.failed_records || [];
      this.failed_records = [].concat((0, _toConsumableArray2["default"])(this.failed_records), (0, _toConsumableArray2["default"])(failed_recs));
    }
  }], [{
    key: "empty_chunk_success_response",
    value: function empty_chunk_success_response() {
      return {
        status: "success",
        status_code: 200,
        total: 0,
        success: 0,
        failure: 0,
        failed_records: []
      };
    }
  }, {
    key: "invalid_records_chunk_response",
    value: function invalid_records_chunk_response(invalid_records) {
      return {
        status: "fail",
        status_code: 500,
        total: invalid_records.length,
        success: 0,
        failure: invalid_records.length,
        failed_records: invalid_records
      };
    }
  }]);
  return BulkResponse;
}();
exports["default"] = BulkResponse;
module.exports = exports.default;