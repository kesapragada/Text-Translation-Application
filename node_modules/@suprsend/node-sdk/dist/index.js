"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Event", {
  enumerable: true,
  get: function get() {
    return _event["default"];
  }
});
Object.defineProperty(exports, "SubscriberListBroadcast", {
  enumerable: true,
  get: function get() {
    return _subscriber_list.SubscriberListBroadcast;
  }
});
exports.Suprsend = void 0;
Object.defineProperty(exports, "Workflow", {
  enumerable: true,
  get: function get() {
    return _workflow["default"];
  }
});
Object.defineProperty(exports, "WorkflowTriggerRequest", {
  enumerable: true,
  get: function get() {
    return _workflow_request["default"];
  }
});
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _utils = require("./utils");
var _attachment = _interopRequireDefault(require("./attachment"));
var _workflow = _interopRequireWildcard(require("./workflow"));
var _workflows_bulk = require("./workflows_bulk");
var _workflow_request = _interopRequireDefault(require("./workflow_request"));
var _workflow_api = _interopRequireDefault(require("./workflow_api"));
var _event = _interopRequireWildcard(require("./event"));
var _events_bulk = require("./events_bulk");
var _subscriber = _interopRequireDefault(require("./subscriber"));
var _subscribers_bulk = _interopRequireDefault(require("./subscribers_bulk"));
var _subscriber_list = require("./subscriber_list");
var _brands = _interopRequireDefault(require("./brands"));
var _tenant = _interopRequireDefault(require("./tenant"));
var _constants = require("./constants");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var package_json = require("../package.json");
var Suprsend = /*#__PURE__*/function () {
  function Suprsend(workspace_key, workspace_secret) {
    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    (0, _classCallCheck2["default"])(this, Suprsend);
    this.workspace_key = workspace_key;
    this.workspace_secret = workspace_secret;
    this.config = config;
    this.base_url = this._get_url(config.base_url);
    this.user_agent = "suprsend/".concat(package_json.version, ";node/").concat(process.version.slice(1));
    this._workflow_trigger = new _workflow._WorkflowTrigger(this);
    this._eventcollector = new _event.EventCollector(this);
    this._bulk_workflows = new _workflows_bulk.BulkWorkflowsFactory(this);
    this._bulk_events = new _events_bulk.BulkEventsFactory(this);
    this._bulk_users = new _subscribers_bulk["default"](this);
    this._user = new _subscriber["default"](this);
    this.brands = new _brands["default"](this);
    this.tenants = new _tenant["default"](this);
    this.workflows = new _workflow_api["default"](this);
    this.subscriber_lists = new _subscriber_list.SubscriberListsApi(this);
    this._validate();
  }
  (0, _createClass2["default"])(Suprsend, [{
    key: "bulk_workflows",
    get: function get() {
      return this._bulk_workflows;
    }
  }, {
    key: "bulk_events",
    get: function get() {
      return this._bulk_events;
    }
  }, {
    key: "bulk_users",
    get: function get() {
      return this._bulk_users;
    }
  }, {
    key: "user",
    get: function get() {
      return this._user;
    }
  }, {
    key: "_validate",
    value: function _validate() {
      if (!this.workspace_key) {
        throw new _utils.SuprsendConfigError("Missing workspace_key");
      } else if (!this.workspace_secret) {
        throw new _utils.SuprsendConfigError("Missing workspace_secret");
      } else if (!this.base_url) {
        throw new _utils.SuprsendConfigError("Missing base_url");
      }
    }
  }, {
    key: "_get_url",
    value: function _get_url(base_url) {
      if (base_url) {
        base_url = base_url.trim();
      }
      if (!base_url) {
        base_url = _constants.DEFAULT_URL;
      }
      base_url = base_url.trim();
      if (!base_url.endsWith("/")) {
        base_url += "/";
      }
      return base_url;
    }
  }, {
    key: "add_attachment",
    value: function add_attachment(body, file_path) {
      var _kwargs$ignore_if_err;
      var kwargs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      console.warn('This method is deprecated. Use "WorkflowTriggerRequest.add_attachment()" instead');
      var file_name = kwargs === null || kwargs === void 0 ? void 0 : kwargs.file_name;
      var ignore_if_error = (_kwargs$ignore_if_err = kwargs === null || kwargs === void 0 ? void 0 : kwargs.ignore_if_error) !== null && _kwargs$ignore_if_err !== void 0 ? _kwargs$ignore_if_err : false;
      if (!(body !== null && body !== void 0 && body.data)) {
        body.data = {};
      }
      if (!(body.data instanceof Object)) {
        throw new _utils.InputValueError("data must be an object");
      }
      var attachment = (0, _attachment["default"])(file_path, file_name, ignore_if_error);
      if (!body.data["$attachments"]) {
        body["data"]["$attachments"] = [];
      }
      body["data"]["$attachments"].push(attachment);
      return body;
    }
  }, {
    key: "trigger_workflow",
    value: function trigger_workflow(data) {
      var wf_ins;
      if (data instanceof _workflow["default"]) {
        wf_ins = data;
      } else {
        wf_ins = new _workflow["default"](data);
      }
      return this._workflow_trigger.trigger(wf_ins);
    }
  }, {
    key: "track",
    value: function track(distinct_id, event_name) {
      var properties = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var kwargs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      console.warn('This method is deprecated. Use "track_event(Event)" instead');
      var event = new _event["default"](distinct_id, event_name, properties, kwargs);
      return this._eventcollector.collect(event);
    }
  }, {
    key: "track_event",
    value: function track_event(event) {
      if (!(event instanceof _event["default"])) {
        throw new _utils.InputValueError("argument must be an instance of suprsend.Event");
      }
      return this._eventcollector.collect(event);
    }
  }]);
  return Suprsend;
}();
exports.Suprsend = Suprsend;