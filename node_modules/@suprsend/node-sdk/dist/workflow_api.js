"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _axios = _interopRequireDefault(require("axios"));
var _signature = _interopRequireDefault(require("./signature"));
var _workflow_trigger_bulk = require("./workflow_trigger_bulk");
var _workflow_request = _interopRequireDefault(require("./workflow_request"));
var WorkflowsApi = /*#__PURE__*/function () {
  function WorkflowsApi(config) {
    (0, _classCallCheck2["default"])(this, WorkflowsApi);
    this.config = config;
    this.metadata = {
      "User-Agent": this.config.user_agent
    };
  }
  (0, _createClass2["default"])(WorkflowsApi, [{
    key: "_get_headers",
    value: function _get_headers() {
      return {
        "Content-Type": "application/json; charset=utf-8",
        Date: new Date().toUTCString(),
        "User-Agent": this.config.user_agent
      };
    }
  }, {
    key: "trigger",
    value: function () {
      var _trigger = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(workflow) {
        var is_part_of_bulk, _workflow$get_final_j, _workflow$get_final_j2, workflow_body, body_size, headers, content_text, url, signature, resp, ok_response, _err$response, _err$response2;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                is_part_of_bulk = false;
                _workflow$get_final_j = workflow.get_final_json(this.config, is_part_of_bulk), _workflow$get_final_j2 = (0, _slicedToArray2["default"])(_workflow$get_final_j, 2), workflow_body = _workflow$get_final_j2[0], body_size = _workflow$get_final_j2[1];
                _context.prev = 2;
                headers = this._get_headers();
                content_text = JSON.stringify(workflow_body);
                url = "".concat(this.config.base_url, "trigger/");
                signature = (0, _signature["default"])(url, "POST", content_text, headers, this.config.workspace_secret);
                headers["Authorization"] = "".concat(this.config.workspace_key, ":").concat(signature);
                _context.next = 10;
                return _axios["default"].post(url, content_text, {
                  headers: headers,
                  transformResponse: [function (data) {
                    return data;
                  }] // dont assume type of response
                });
              case 10:
                resp = _context.sent;
                ok_response = Math.floor(resp.status / 100) === 2;
                return _context.abrupt("return", {
                  success: ok_response,
                  status: ok_response ? "success" : "fail",
                  status_code: resp.status,
                  message: resp.data
                });
              case 15:
                _context.prev = 15;
                _context.t0 = _context["catch"](2);
                if (!(_context.t0 !== null && _context.t0 !== void 0 && _context.t0.response)) {
                  _context.next = 21;
                  break;
                }
                return _context.abrupt("return", {
                  success: false,
                  status: "fail",
                  status_code: (_context.t0 === null || _context.t0 === void 0 ? void 0 : (_err$response = _context.t0.response) === null || _err$response === void 0 ? void 0 : _err$response.status) || 500,
                  message: _context.t0 === null || _context.t0 === void 0 ? void 0 : (_err$response2 = _context.t0.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data
                });
              case 21:
                return _context.abrupt("return", {
                  success: false,
                  status: "fail",
                  status_code: 500,
                  message: _context.t0.message
                });
              case 22:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[2, 15]]);
      }));
      function trigger(_x) {
        return _trigger.apply(this, arguments);
      }
      return trigger;
    }()
  }, {
    key: "bulk_trigger_instance",
    value: function bulk_trigger_instance() {
      return new _workflow_trigger_bulk.BulkWorkflowTrigger(this.config);
    }
  }]);
  return WorkflowsApi;
}();
exports["default"] = WorkflowsApi;
module.exports = exports.default;