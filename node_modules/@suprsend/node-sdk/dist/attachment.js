"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = get_attachment_json;
var _path = _interopRequireDefault(require("path"));
var _mimeTypes = _interopRequireDefault(require("mime-types"));
var _utils = require("./utils");
function check_is_web_url() {
  var file_path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  return file_path.startsWith("http://") || file_path.startsWith("https://");
}
function get_attachment_json_for_file(file_path, file_name, ignore_if_error) {
  try {
    var abs_path = _path["default"].resolve((0, _utils.resolveTilde)(file_path));
    var final_file_name = _path["default"].basename(abs_path);
    if (file_name && file_name.trim()) {
      final_file_name = file_name.trim();
    }
    return {
      filename: final_file_name,
      contentType: _mimeTypes["default"].lookup(abs_path),
      data: (0, _utils.base64Encode)(abs_path),
      url: null,
      ignore_if_error: ignore_if_error
    };
  } catch (ex) {
    if (ignore_if_error) {
      console.log("WARNING: ignoring error while processing attachment file.", ex);
      return;
    } else {
      throw ex;
    }
  }
}
function get_attachment_json_for_url(file_url, file_name, ignore_if_error) {
  return {
    filename: file_name,
    contentType: null,
    data: null,
    url: file_url,
    ignore_if_error: ignore_if_error
  };
}
function get_attachment_json(file_path, file_name) {
  var ignore_if_error = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  if (check_is_web_url(file_path)) {
    return get_attachment_json_for_url(file_path, file_name, ignore_if_error);
  } else {
    return get_attachment_json_for_file(file_path, file_name, ignore_if_error);
  }
}
module.exports = exports.default;