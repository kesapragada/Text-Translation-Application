"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _utils = require("./utils");
var _attachment = _interopRequireDefault(require("./attachment"));
var _constants = require("./constants");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var WorkflowTriggerRequest = /*#__PURE__*/function () {
  function WorkflowTriggerRequest(body) {
    var kwargs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    (0, _classCallCheck2["default"])(this, WorkflowTriggerRequest);
    if (!((0, _typeof2["default"])(body) === "object" && !Array.isArray(body))) {
      throw new _utils.InputValueError("WorkflowTriggerRequest body must be a JSON object/dictionary");
    }
    this.body = body;
    this.idempotency_key = kwargs === null || kwargs === void 0 ? void 0 : kwargs.idempotency_key;
    this.tenant_id = kwargs === null || kwargs === void 0 ? void 0 : kwargs.tenant_id;
    this.cancellation_key = kwargs === null || kwargs === void 0 ? void 0 : kwargs.cancellation_key;
  }
  (0, _createClass2["default"])(WorkflowTriggerRequest, [{
    key: "add_attachment",
    value: function add_attachment() {
      var _kwargs$ignore_if_err;
      var file_path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      var kwargs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var file_name = kwargs === null || kwargs === void 0 ? void 0 : kwargs.file_name;
      var ignore_if_error = (_kwargs$ignore_if_err = kwargs === null || kwargs === void 0 ? void 0 : kwargs.ignore_if_error) !== null && _kwargs$ignore_if_err !== void 0 ? _kwargs$ignore_if_err : false;
      if (!this.body.data) {
        this.body.data = {};
      }
      // If body["data"] is not a dictionary, don't raise an error while adding attachment.
      if ((0, _typeof2["default"])(this.body.data) !== "object") {
        console.warn("WARNING: attachment cannot be added. Please make sure body['data'] is a dictionary. WorkflowTriggerRequest ", JSON.stringify(this.as_json()));
        return;
      }
      var attachment = (0, _attachment["default"])(file_path, file_name, ignore_if_error);
      if (!attachment) {
        return;
      }
      if (!this.body.data.$attachments) {
        this.body.data.$attachments = [];
      }
      this.body.data.$attachments.push(attachment);
    }
  }, {
    key: "get_final_json",
    value: function get_final_json(config) {
      var is_part_of_bulk = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      if (this.idempotency_key) {
        this.body["$idempotency_key"] = this.idempotency_key;
      }
      if (this.tenant_id) {
        this.body["tenant_id"] = this.tenant_id;
      }
      if (this.cancellation_key) {
        this.body.cancellation_key = this.cancellation_key;
      }
      this.body = (0, _utils.validate_workflow_trigger_body_schema)(this.body);
      var apparent_size = (0, _utils.get_apparent_workflow_body_size)(this.body, is_part_of_bulk);
      if (apparent_size > _constants.SINGLE_EVENT_MAX_APPARENT_SIZE_IN_BYTES) {
        throw new _utils.InputValueError("workflow body too big - ".concat(apparent_size, " Bytes, must not exceed ").concat(_constants.SINGLE_EVENT_MAX_APPARENT_SIZE_IN_BYTES_READABLE));
      }
      return [this.body, apparent_size];
    }
  }, {
    key: "as_json",
    value: function as_json() {
      var body_dict = _objectSpread({}, this.body);
      if (this.idempotency_key) {
        body_dict.$idempotency_key = this.idempotency_key;
      }
      if (this.tenant_id) {
        body_dict.tenant_id = this.tenant_id;
      }
      if (this.cancellation_key) {
        body_dict.cancellation_key = this.cancellation_key;
      }
      return body_dict;
    }
  }]);
  return WorkflowTriggerRequest;
}();
exports["default"] = WorkflowTriggerRequest;
module.exports = exports.default;